---
# Source: registry/templates/pre-install/ensure-db-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ensure-db
  annotations:
    "helm.sh/hook": pre-install, pre-upgrade
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      containers:
        - name: ensure-registry-database
          image: postgres
          env:
            - name: PGCONN
              value: "postgresql://registry:registry@stolon-proxy.stolon:5432/registry"
            - name: DB_USER
              value: "registry"
            - name: DB_PASSWORD
              value: "registry"
            - name: DB_NAME
              value: "registry"
            - name: PLSQL
              value: |
                DO 
                $$$
                   BEGIN
                      -- Connect as a superuser
                      IF NOT EXISTS (SELECT * FROM pg_roles WHERE rolname = '$(DB_USER)') THEN
                      -- Create the role if it does not exist
                      CREATE ROLE $(DB_USER) LOGIN PASSWORD '$(DB_PASSWORD)';
                      END IF;
    
                      IF NOT EXISTS (SELECT datname FROM pg_database WHERE datname='$(DB_NAME)') THEN
                      -- Create the database if it does not exist
                      CREATE DATABASE $(DB_NAME) OWNER $(DB_USER);
                      END IF;

                      --revoke all existing privileges
                      REVOKE ALL PRIVILEGES ON DATABASE $(DB_NAME) FROM $(DB_USER);
                      -- grant new privileges
                      GRANT ALL PRIVILEGES ON DATABASE $(DB_NAME) TO $(DB_USER);
                    END
                $$$;

          command: ["psql", "$(PGCONN)", "-c", "$(PLSQL)"]
      restartPolicy: Never
  backoffLimit: 10
