apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pipeline-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: trigger-build
  namespace: tekton-pipelines
spec:
  params:
    - name: REPO
      description: "Git repo"
    - name: BRANCH
      description: The git revision
      default: main
    - name: REVISION
      description: The git revision
      default: latest
    - name: NAMESPACE
      description: The namespace to create the resources
      default: apps
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: gitea-push-build-run-
        namespace: tekton-pipelines
      spec:
        serviceAccountName: tekton-pipelines-webhook
        pipelineRef:
          name: build-and-deploy
        params:
          - name: GIT_BASE_URL
            value: "http://git-gitea-http.gitea:3000"
          - name: GIT_REPO
            value: $(tt.params.REPO)
          - name: GIT_SOURCE_REFERENCE
            value: $(tt.params.BRANCH)
          - name: CONTAINER_IMAGE
            value: "test-take-repo-substr"
          - name: RELEASE_NAMESPACE
            value:  $(tt.params.NAMESPACE)
          - name: HELM_RELEASE_NAME
            value: "test-helm-release-name"
          - name: HELM_CHARTS_DIR
            value: ".ertia/deploy"
        workspaces:
          - name: pipeline
            volumeClaimTemplate:
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: 1Gi
          - name: basic-auth
            secret:
              secretName: my-secret
          - name: dockerconfig
            secret:
              secretName: my-secret
---

apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: trigger-build
  namespace: tekton-pipelines
spec:
  params:
    - name: REPO
      value: "$(body.repository.clone_url)"
    - name: BRANCH
      value: "$(body.repository.default_branch)"
    - name: REVISION
      value: "$(body.head_commit.id)"
    - name: NAMESPACE
      value: "$(body.repository.owner.username)"
