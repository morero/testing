apiVersion: pg.percona.com/v2beta1
kind: PerconaPGCluster
metadata:
  name: "percona-cluster"
spec:
  # if users is comment out, default user cluster2 will be created.
  # if restore from s3 backup, previous users will exist with password from backup
  users: # {"$kpt-set":"users"}
    - name: "demo" # {"$kpt-set":"db_user"}
      password:
        type: AlphaNumeric
      databases: # {"$kpt-set":"db_list"}
        - "demo"
      options: "" # {"$kpt-set":"db_roles"}
    - name: postgres
      password:
        type: AlphaNumeric
      databases:
        - "postgres"
      options: "SUPERUSER"

  #  databaseInitSQL:
  #    key: init.sql
  #    name: cluster-init-sql

  spec:
    #  secretsName: cluster1-users
    sslCA: percona-cluster-ssl-ca
    sslSecretName: percona-cluster-ssl-keypair
    sslReplicationSecretName: percona-cluster-ssl-keypair
    tlsOnly: true

  image: perconalab/percona-postgresql-operator:main-ppg14-postgres
  postgresVersion: 14
  instances:
    - name: instance1
      dataVolumeClaimSpec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  backups:
    pgbackrest:
      stanza: db
      image: perconalab/percona-postgresql-operator:main-ppg14-pgbackrest
      repos:
        - name: repo1
          #          schedules:
          #            full: "0 0 * * 6"
          #            differential: "0 1 * * 1-6"
          volume:
            volumeClaimSpec:
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 1Gi

      global:
        log-level-console: info
#  proxy:
#    pgBouncer:
      #replicas: 3
#      image: perconalab/percona-postgresql-operator:main-ppg14-pgbouncer