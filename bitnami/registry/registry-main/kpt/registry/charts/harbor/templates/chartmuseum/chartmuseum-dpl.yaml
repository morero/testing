---
# Source: registry/charts/harbor/templates/chartmuseum/chartmuseum-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-harbor-chartmuseum
  namespace: "registry"
  labels:
    app.kubernetes.io/name: harbor
    helm.sh/chart: harbor-16.3.0
    app.kubernetes.io/instance: registry
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: chartmuseum
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: harbor
      app.kubernetes.io/instance: registry
      app.kubernetes.io/component: chartmuseum
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: harbor
        app.kubernetes.io/instance: registry
        app.kubernetes.io/component: chartmuseum
      annotations:
        checksum/configmap-envvars: be14e2f63532efbe1c512b87fb6da0b62843a95d39de62109fef1974f618bc5e
        checksum/secret: ca1b06f5122a2d7295af89175bf71ec8d7290345f47f7c69111a5d51167844a5
        checksum/secret-core: e00b9c1ac796c4fa556d3b64a29dda8ad54a07b444bb4bbaa36b9ce87e23f009
    spec:
      
      automountServiceAccountToken: false
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: harbor
                    app.kubernetes.io/instance: registry
                    app.kubernetes.io/component: chartmuseum
                namespaces:
                  - "registry"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      containers:
        - name: chartmuseum
          image: docker.io/bitnami/chartmuseum:0.15.0-debian-11-r59
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: DEBUG
              value: "0"
            - name: BASIC_AUTH_PASS
              valueFrom:
                secretKeyRef:
                  # Take the password from the core component secret
                  name: registry-harbor-core
                  key: secret
          envFrom:
            - configMapRef:
                name: registry-harbor-chartmuseum-envvars
            - secretRef:
                name: registry-harbor-chartmuseum-secret
          ports:
            - containerPort: 9999
              name: http
          livenessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /health
              port: http
              scheme: HTTP
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
            httpGet:
              path: /health
              port: http
              scheme: HTTP
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: chartmuseum-data
              mountPath: /bitnami/data
              subPath: 
      volumes:
        - name: chartmuseum-data
          persistentVolumeClaim:
            claimName: registry-harbor-chartmuseum
