---
# Source: registry/charts/harbor/templates/jobservice/jobservice-dpl.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "registry-harbor-jobservice"
  labels:
    heritage: Helm
    release: registry
    chart: harbor
    app: "harbor"
    component: jobservice
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      release: registry
      app: "harbor"
      component: jobservice
  template:
    metadata:
      labels:
        heritage: Helm
        release: registry
        chart: harbor
        app: "harbor"
        component: jobservice
      annotations:
        checksum/configmap: d431ac69ed1a53647ecf8a90f2b41f54ae6afe5f12a7ad8ecbd31f1752eb4319
        checksum/configmap-env: c8cff69073cc0ee0eb10cf7c84621abd89898c6b863f60030c616934027b0488
        checksum/secret: 5a07fec4056980e1d6d31abbf5a52b9faf19952a80078a57041437386cbcb1a5
        checksum/secret-core: 1ba371ada0228d11cc05c007c2fcc61887a1f7b3e7fdcc72cce7a3d88b6966be
    spec:
      securityContext:
        runAsUser: 10000
        fsGroup: 10000
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 120
      containers:
      - name: jobservice
        image: goharbor/harbor-jobservice:dev
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/v1/stats
            scheme: HTTP
            port: 8080
          initialDelaySeconds: 300
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/v1/stats
            scheme: HTTP
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
        env:
          - name: CORE_SECRET
            valueFrom:
              secretKeyRef:
                name: registry-harbor-core
                key: secret
        envFrom:
        - configMapRef:
            name: "registry-harbor-jobservice-env"
        - secretRef:
            name: "registry-harbor-jobservice"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: jobservice-config
          mountPath: /etc/jobservice/config.yml
          subPath: config.yml
        - name: job-logs
          mountPath: /var/log/jobs
          subPath: 
        - name: job-scandata-exports
          mountPath: /var/scandata_exports
          subPath: 
      volumes:
      - name: jobservice-config
        configMap:
          name: "registry-harbor-jobservice"
      - name: job-logs
        persistentVolumeClaim:
          claimName: registry-harbor-jobservice
      - name: job-scandata-exports
        persistentVolumeClaim:
          claimName: registry-harbor-jobservice-scandata
