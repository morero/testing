---
# Source: registry/charts/harbor/templates/ingress/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "registry-harbor-ingress"
  labels:
    heritage: Helm
    release: registry
    chart: harbor
    app: "harbor"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    ingress.kubernetes.io/proxy-body-size: "0"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - secretName: registry-tls
    hosts:
    - core.local.ertia.cloud # {"$kpt-set":"core-domain"}
  rules:
  - http:
      paths:
      - path: /api/
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-core
            port:
              number: 80
      - path: /service/
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-core
            port:
              number: 80
      - path: /v2
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-core
            port:
              number: 80
      - path: /chartrepo/
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-core
            port:
              number: 80
      - path: /c/
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-core
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-portal
            port:
              number: 80
    host: core.local.ertia.cloud # {"$kpt-set":"core-domain"}
---
# Source: registry/charts/harbor/templates/ingress/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "registry-harbor-ingress-notary"
  labels:
    heritage: Helm
    release: registry
    chart: harbor
    app: "harbor"
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
    ingress.kubernetes.io/proxy-body-size: "0"
    ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/ingress.class: traefik
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - secretName: registry-tls
    hosts:
    - notary.local.ertia.cloud # {"$kpt-set":"notary-domain"}
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: registry-harbor-notary-server
            port:
              number: 4443
    host: notary.local.ertia.cloud # {"$kpt-set":"notary-domain"}

