NAME: cilium
LAST DEPLOYED: Tue Mar 14 17:30:50 2023
NAMESPACE: kube-system
STATUS: deployed
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
null

COMPUTED VALUES:
cilium:
  MTU: 0
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            k8s-app: cilium
        topologyKey: kubernetes.io/hostname
  agent: true
  agentNotReadyTaintKey: node.cilium.io/agent-not-ready
  aksbyocni:
    enabled: false
  alibabacloud:
    enabled: false
  annotateK8sNode: false
  autoDirectNodeRoutes: false
  azure:
    enabled: false
  bandwidthManager:
    bbr: false
    enabled: false
  bgp:
    announce:
      loadbalancerIP: true
      podCIDR: false
    enabled: false
  bgpControlPlane:
    enabled: false
  bpf:
    clockProbe: false
    lbExternalClusterIP: false
    lbMapMax: 65536
    monitorAggregation: medium
    monitorFlags: all
    monitorInterval: 5s
    policyMapMax: 16384
    preallocateMaps: false
    root: /sys/fs/bpf
  certgen:
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/certgen
      tag: v0.1.8@sha256:4a456552a5f192992a6edcec2febb1c54870d665173a33dc7d876129b199ddbd
    podLabels: {}
    tolerations: []
    ttlSecondsAfterFinished: 1800
  cgroup:
    autoMount:
      enabled: true
      resources: {}
    hostRoot: /run/cilium/cgroupv2
  cleanBpfState: false
  cleanState: false
  cluster:
    id: 0
    name: default
  clustermesh:
    apiserver:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      etcd:
        image:
          pullPolicy: IfNotPresent
          repository: quay.io/coreos/etcd
          tag: v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3
        init:
          resources: {}
        resources: {}
      extraEnv: []
      image:
        digest: sha256:f7273ddb4c223e54827d1185d0c8f3b87966b05229358a224cdc3fe11a25fc72
        pullPolicy: IfNotPresent
        repository: quay.io/cilium/clustermesh-apiserver
        tag: v1.13.0
        useDigest: true
      nodeSelector:
        kubernetes.io/os: linux
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      podLabels: {}
      priorityClassName: ""
      replicas: 1
      resources: {}
      service:
        annotations: {}
        nodePort: 32379
        type: NodePort
      tls:
        admin:
          cert: ""
          key: ""
        auto:
          certManagerIssuerRef: {}
          certValidityDuration: 1095
          enabled: true
          method: helm
        ca:
          cert: ""
          key: ""
        client:
          cert: ""
          key: ""
        remote:
          cert: ""
          key: ""
        server:
          cert: ""
          extraDnsNames: []
          extraIpAddresses: []
          key: ""
      tolerations: []
      topologySpreadConstraints: []
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
    config:
      clusters: []
      domain: mesh.cilium.io
      enabled: false
    useAPIServer: false
  cni:
    binPath: /opt/cni/bin
    chainingMode: none
    confFileMountPath: /tmp/cni-configuration
    confPath: /etc/cni/net.d
    configMapKey: cni-config
    customConf: false
    exclusive: true
    hostConfDirMountPath: /host/etc/cni/net.d
    install: true
    logFile: /var/run/cilium/cilium-cni.log
  conntrackGCInterval: ""
  containerRuntime:
    integration: none
  crdWaitTimeout: ""
  customCalls:
    enabled: false
  daemon:
    runPath: /var/run/cilium
  debug:
    enabled: false
  disableEndpointCRD: "false"
  dnsPolicy: ""
  dnsProxy:
    dnsRejectResponseCode: refused
    enableDnsCompression: true
    endpointMaxIpPerHostname: 50
    idleConnectionGracePeriod: 0s
    maxDeferredConnectionDeletes: 10000
    minTtl: 3600
    preCache: ""
    proxyPort: 0
    proxyResponseMaxDelay: 100ms
  egressGateway:
    enabled: false
    installRoutes: false
  enableCiliumEndpointSlice: false
  enableCnpStatusUpdates: false
  enableCriticalPriorityClass: true
  enableIPv4Masquerade: true
  enableIPv6BIGTCP: false
  enableIPv6Masquerade: true
  enableK8sEventHandover: false
  enableK8sTerminatingEndpoint: true
  enableRuntimeDeviceDetection: false
  enableXTSocketFallback: true
  encryption:
    enabled: false
    interface: ""
    ipsec:
      interface: ""
      keyFile: ""
      mountPath: ""
      secretName: ""
    keyFile: keys
    mountPath: /etc/ipsec
    nodeEncryption: false
    secretName: cilium-ipsec-keys
    type: ipsec
    wireguard:
      userspaceFallback: false
  endpointHealthChecking:
    enabled: true
  endpointRoutes:
    enabled: false
  endpointStatus:
    enabled: false
    status: ""
  eni:
    awsEnablePrefixDelegation: false
    awsReleaseExcessIPs: false
    ec2APIEndpoint: ""
    enabled: false
    eniTags: {}
    gcInterval: ""
    gcTags: {}
    iamRole: ""
    instanceTagsFilter: []
    subnetIDsFilter: []
    subnetTagsFilter: []
    updateEC2AdapterLimitViaAPI: false
  etcd:
    clusterDomain: cluster.local
    enabled: false
    endpoints:
    - https://CHANGE-ME:2379
    extraArgs: []
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/cilium-etcd-operator
      tag: v2.0.7@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc
    k8sService: false
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    priorityClassName: ""
    resources: {}
    securityContext: {}
    ssl: false
    tolerations:
    - operator: Exists
    topologySpreadConstraints: []
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
  externalIPs:
    enabled: true
  externalWorkloads:
    enabled: false
  extraArgs: []
  extraConfig: {}
  extraContainers: []
  extraEnv: []
  extraHostPathMounts: []
  extraVolumeMounts: []
  extraVolumes: []
  gatewayAPI:
    enabled: false
    secretsNamespace:
      create: true
      name: cilium-secrets
      sync: true
  gke:
    enabled: false
  global: {}
  healthChecking: true
  healthPort: 9879
  hostFirewall:
    enabled: false
  hostPort:
    enabled: true
  hostServices:
    enabled: false
  hubble:
    enabled: true
    listenAddress: :4244
    metrics:
      dashboards:
        annotations: {}
        enabled: false
        label: grafana_dashboard
        labelValue: "1"
      enableOpenMetrics: false
      port: 9965
      serviceAnnotations: {}
      serviceMonitor:
        annotations: {}
        enabled: false
        interval: 10s
        labels: {}
        relabelings:
        - replacement: ${1}
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: node
    peerService:
      clusterDomain: cluster.local
      enabled: true
      targetPort: 4244
    preferIpv6: false
    relay:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      dialTimeout: null
      enabled: true
      extraEnv: []
      image:
        digest: sha256:bc00f086285d2d287dd662a319d3dbe90e57179515ce8649425916aecaa9ac3c
        pullPolicy: IfNotPresent
        repository: quay.io/cilium/hubble-relay
        tag: v1.13.0
        useDigest: true
      listenHost: ""
      listenPort: "4245"
      nodeSelector:
        kubernetes.io/os: linux
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      podLabels: {}
      pprof:
        address: localhost
        enabled: false
        port: 6062
      priorityClassName: ""
      prometheus:
        enabled: false
        port: 9966
        serviceMonitor:
          annotations: {}
          enabled: false
          interval: 10s
          labels: {}
      replicas: 1
      resources: {}
      retryTimeout: null
      rollOutPods: false
      securityContext: {}
      service:
        nodePort: 31234
        type: ClusterIP
      sortBufferDrainTimeout: null
      sortBufferLenMax: null
      terminationGracePeriodSeconds: 1
      tls:
        client:
          cert: ""
          key: ""
        server:
          cert: ""
          enabled: false
          extraDnsNames: []
          extraIpAddresses: []
          key: ""
      tolerations: []
      topologySpreadConstraints: []
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
    skipUnknownCGroupIDs: null
    socketPath: /var/run/cilium/hubble.sock
    tls:
      auto:
        certManagerIssuerRef: {}
        certValidityDuration: 1095
        enabled: true
        method: helm
        schedule: 0 0 1 */4 *
      ca:
        cert: ""
        key: ""
      enabled: true
      server:
        cert: ""
        extraDnsNames: []
        extraIpAddresses: []
        key: ""
    ui:
      affinity: {}
      backend:
        extraEnv: []
        image:
          pullPolicy: IfNotPresent
          repository: quay.io/cilium/hubble-ui-backend
          tag: v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4
        resources: {}
      enabled: false
      frontend:
        extraEnv: []
        image:
          pullPolicy: IfNotPresent
          repository: quay.io/cilium/hubble-ui
          tag: v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a
        resources: {}
        server:
          ipv6:
            enabled: true
      ingress:
        annotations: {}
        className: ""
        enabled: false
        hosts:
        - chart-example.local
        tls: []
      nodeSelector:
        kubernetes.io/os: linux
      podAnnotations: {}
      podDisruptionBudget:
        enabled: false
        maxUnavailable: 1
      podLabels: {}
      priorityClassName: ""
      replicas: 1
      rollOutPods: false
      securityContext:
        enabled: true
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      service:
        nodePort: 31235
        type: ClusterIP
      standalone:
        enabled: false
        tls:
          certsVolume: {}
      tls:
        client:
          cert: ""
          key: ""
      tolerations: []
      topologySpreadConstraints: []
      updateStrategy:
        rollingUpdate:
          maxUnavailable: 1
        type: RollingUpdate
  identityAllocationMode: crd
  identityChangeGracePeriod: ""
  image:
    digest: sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68
    override: null
    pullPolicy: IfNotPresent
    repository: quay.io/cilium/cilium
    tag: v1.13.0
    useDigest: true
  imagePullSecrets: null
  ingressController:
    enabled: false
    enforceHttps: true
    ingressLBAnnotationPrefixes:
    - service.beta.kubernetes.io
    - service.kubernetes.io
    - cloud.google.com
    loadbalancerMode: dedicated
    secretsNamespace:
      create: true
      name: cilium-secrets
      sync: true
    service:
      annotations:
        ertia.io/fake-lb: true
      insecureNodePort: null
      labels: {}
      name: cilium-ingress
      secureNodePort: null
      type: LoadBalancer
  installIptablesRules: true
  installNoConntrackIptablesRules: false
  ipMasqAgent:
    enabled: false
  ipam:
    mode: kubernetes
    operator:
      clusterPoolIPv4MaskSize: 24
      clusterPoolIPv4PodCIDR: 10.0.0.0/8
      clusterPoolIPv4PodCIDRList: []
      clusterPoolIPv6MaskSize: 120
      clusterPoolIPv6PodCIDR: fd00::/104
      clusterPoolIPv6PodCIDRList: []
  ipv4:
    enabled: true
  ipv4NativeRoutingCIDR: ""
  ipv6:
    enabled: false
  ipv6NativeRoutingCIDR: ""
  k8s: {}
  k8sServiceHost: 46.246.46.114
  k8sServicePort: 6443
  keepDeprecatedLabels: false
  keepDeprecatedProbes: false
  kubeConfigPath: ""
  kubeProxyReplacement: strict
  kubeProxyReplacementHealthzBindAddr: ""
  l2NeighDiscovery:
    enabled: true
    refreshPeriod: 30s
  l7Proxy: true
  livenessProbe:
    failureThreshold: 10
    periodSeconds: 30
  loadBalancer:
    l7:
      algorithm: round_robin
      backend: disabled
      ports: []
  localRedirectPolicy: false
  logSystemLoad: false
  maglev: {}
  monitor:
    enabled: false
  name: cilium
  nat46x64Gateway:
    enabled: false
  nodePort:
    autoProtectPortRange: true
    bindProtection: true
    enableHealthCheck: true
    enabled: true
  nodeSelector:
    kubernetes.io/os: linux
  nodeinit:
    affinity: {}
    bootstrapFile: /tmp/cilium-bootstrap.d/cilium-bootstrap-time
    enabled: false
    extraEnv: []
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/startup-script
      tag: d69851597ea019af980891a4628fb36b7880ec26
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ""
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    securityContext:
      capabilities:
        add:
        - SYS_MODULE
        - NET_ADMIN
        - SYS_ADMIN
        - SYS_CHROOT
        - SYS_PTRACE
      privileged: false
      seLinuxOptions:
        level: s0
        type: spc_t
    tolerations:
    - operator: Exists
    updateStrategy:
      type: RollingUpdate
  operator:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              io.cilium/app: operator
          topologyKey: kubernetes.io/hostname
    dnsPolicy: ""
    enabled: true
    endpointGCInterval: 5m0s
    extraArgs: []
    extraEnv: []
    extraHostPathMounts: []
    extraVolumeMounts: []
    extraVolumes: []
    identityGCInterval: 15m0s
    identityHeartbeatTimeout: 30m0s
    image:
      alibabacloudDigest: sha256:0332376a4a6f92ff7936d3b52614f8219a10d6fd46aa14fead8426d0e140f79a
      awsDigest: sha256:3cc9ff5bcc57f536427e7059abc916831b368654dfddcbad8a412731984a95e4
      azureDigest: sha256:ec1246bbbf7125998e2f547fc518ae56ae364dbd3f46812fa325c068cc406bd7
      genericDigest: sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/operator
      suffix: ""
      tag: v1.13.0
      useDigest: true
    nodeGCInterval: 5m0s
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    pprof:
      address: localhost
      enabled: false
      port: 6061
    priorityClassName: ""
    prometheus:
      enabled: false
      port: 9963
      serviceMonitor:
        annotations: {}
        enabled: false
        interval: 10s
        labels: {}
    removeNodeTaints: true
    replicas: 2
    resources: {}
    rollOutPods: false
    securityContext: {}
    setNodeNetworkStatus: true
    skipCNPStatusStartupClean: false
    skipCRDCreation: false
    tolerations:
    - operator: Exists
    topologySpreadConstraints: []
    unmanagedPodWatcher:
      intervalSeconds: 15
      restart: true
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
  pmtuDiscovery:
    enabled: false
  podAnnotations: {}
  podLabels: {}
  policyEnforcementMode: default
  pprof:
    address: localhost
    enabled: false
    port: 6060
  preflight:
    affinity:
      podAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              k8s-app: cilium
          topologyKey: kubernetes.io/hostname
    enabled: false
    extraEnv: []
    image:
      digest: sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68
      pullPolicy: IfNotPresent
      repository: quay.io/cilium/cilium
      tag: v1.13.0
      useDigest: true
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podDisruptionBudget:
      enabled: false
      maxUnavailable: 1
    podLabels: {}
    priorityClassName: ""
    resources: {}
    securityContext: {}
    terminationGracePeriodSeconds: 1
    tofqdnsPreCache: ""
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/not-ready
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoSchedule
      key: node.cloudprovider.kubernetes.io/uninitialized
      value: "true"
    - key: CriticalAddonsOnly
      operator: Exists
    updateStrategy:
      type: RollingUpdate
    validateCNPs: true
  priorityClassName: ""
  prometheus:
    enabled: false
    port: 9962
    serviceMonitor:
      annotations: {}
      enabled: false
      interval: 10s
      labels: {}
      relabelings:
      - replacement: ${1}
        sourceLabels:
        - __meta_kubernetes_pod_node_name
        targetLabel: node
  proxy:
    prometheus:
      enabled: true
      port: "9964"
    sidecarImageRegex: cilium/istio_proxy
  rbac:
    create: true
  readinessProbe:
    failureThreshold: 3
    periodSeconds: 30
  remoteNodeIdentity: true
  resourceQuotas:
    cilium:
      hard:
        pods: 10k
    enabled: false
    operator:
      hard:
        pods: "15"
  resources: {}
  rollOutCiliumPods: false
  sctp:
    enabled: false
  securityContext:
    capabilities:
      applySysctlOverwrites:
      - SYS_ADMIN
      - SYS_CHROOT
      - SYS_PTRACE
      ciliumAgent:
      - CHOWN
      - KILL
      - NET_ADMIN
      - NET_RAW
      - IPC_LOCK
      - SYS_MODULE
      - SYS_ADMIN
      - SYS_RESOURCE
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
      cleanCiliumState:
      - NET_ADMIN
      - SYS_MODULE
      - SYS_ADMIN
      - SYS_RESOURCE
      mountCgroup:
      - SYS_ADMIN
      - SYS_CHROOT
      - SYS_PTRACE
    privileged: false
    seLinuxOptions:
      level: s0
      type: spc_t
  serviceAccounts:
    cilium:
      annotations: {}
      create: true
      name: cilium
    clustermeshApiserver:
      annotations: {}
      create: true
      name: clustermesh-apiserver
    clustermeshcertgen:
      annotations: {}
      create: true
      name: clustermesh-apiserver-generate-certs
    etcd:
      annotations: {}
      create: true
      name: cilium-etcd-operator
    hubblecertgen:
      annotations: {}
      create: true
      name: hubble-generate-certs
    operator:
      annotations: {}
      create: true
      name: cilium-operator
    preflight:
      annotations: {}
      create: true
      name: cilium-pre-flight
    relay:
      annotations: {}
      create: true
      name: hubble-relay
    ui:
      annotations: {}
      create: true
      name: hubble-ui
  sleepAfterInit: false
  socketLB:
    enabled: false
  sockops:
    enabled: false
  startupProbe:
    failureThreshold: 105
    periodSeconds: 2
  svcSourceRangeCheck: true
  synchronizeK8sNodes: true
  terminationGracePeriodSeconds: 1
  tls:
    ca:
      cert: ""
      certValidityDuration: 1095
      key: ""
    secretsBackend: local
  tolerations:
  - operator: Exists
  tunnel: vxlan
  tunnelPort: 0
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  vtep:
    cidr: ""
    enabled: false
    endpoint: ""
    mac: ""
    mask: ""
  waitForKubeProxy: false
  wellKnownIdentities:
    enabled: false

HOOKS:
MANIFEST:
---
# Source: cilium/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTDYxV3JQY3Q2WnVndEVITWZUL0hHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFME1UWXpNRFV3V2hjTk1qWXdNekV6TVRZegpNRFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9RY0x5MXIxSW0vL3Z3b2Q5eTV2OElJNWNzaHNQOHp4N0VWT2JiaDJZTTFtRmphM0kKcnF5VDR4S2c1Ylk5UE5NMHRERGs0bGxvK0x6VWRXcVpqcUFzZ3ZrZTNUc0dGK2ZmMTQ4Wk5FU3hmUloyZjJtRAp0Mnh0S0ZrUzZicW1TZkVEN3JxenNkekVCMWhtTUYwdTI3eGNHeit0aWJhbzdTNU9GaFBYMUtYcUQveHJLRnJyCk9kaHR5Sm14ckFKN1k1WER1cm1ITXphMk05UUdhNHY1ODhsWWNCRi85WFRLVEJaQXN1ZGN4STk4aVNnS0VzM3gKMXBURTZCdEJsODd5ZUxCK0tvQ2VIQWV5SStEaXk5blJHbG9haGxvZDllYWxVdDVTNzRNajJKNE1WVTZPVkNqYgpCNFVPNnNnVHZFdytpU3pxdnhXV3NHZzJ0M0NrN3g5akwzOUxBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvRk52bmpHaHN3RkRJQjFUb3l0MjFkQVg3bGd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFT29iLytka1ZRaE1SR1NNdDdTQTZIR1R6MTZLcFczQXlaTkdiNVg4Z0JyaTlMMjBuTE5rUXQxClRYYW03QXBZSmQ1djVPdUwvNlVBSTdHVkpWRDFTRktMd202TGYwVHdUSmpNZUxqUzVjUnV0UHRPU3NXaDdTS00KcFdRbEI3MExMQWFGM2NyQXZqV3U4dVpuMVVxdlBrRG5yV1YxQUsyMHFzZ0Z6aU1pZDVjSHRFaTZxOUhJRmozcwppNkNTNTlyWU1KVXBjOXBxOEFLYXJxR200cXo2ODBtZGl5aUM5blJiSGpObGpneHdXYlJMS2hhMlUvVjBtdUpXCm8wSkV0c216MUtWSXJQSXNIMlZXNThzaXRudVA3VmxJQ0xvTDNScE5wQnpXZUJFWUdKcnhGL2xrcHdYQ0p6MmUKclZGY3l0MW5NcWlvT2c1cmhwSVVhcTUvWERNM1JvST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjBIQzh0YTlTSnYvNzhLSGZjdWIvQ0NPWExJYkQvTThleEZUbTI0ZG1ETlpoWTJ0CnlLNnNrK01Tb09XMlBUelROTFF3NU9KWmFQaTgxSFZxbVk2Z0xJTDVIdDA3QmhmbjM5ZVBHVFJFc1gwV2RuOXAKZzdkc2JTaFpFdW02cGtueEErNjZzN0hjeEFkWVpqQmRMdHU4WEJzL3JZbTJxTzB1VGhZVDE5U2w2Zy84YXloYQo2em5ZYmNpWnNhd0NlMk9WdzdxNWh6TTJ0alBVQm11TCtmUEpXSEFSZi9WMHlrd1dRTExuWE1TUGZJa29DaExOCjhkYVV4T2diUVpmTzhuaXdmaXFBbmh3SHNpUGc0c3ZaMFJwYUdvWmFIZlhtcFZMZVV1K0RJOWllREZWT2psUW8KMndlRkR1cklFN3hNUG9rczZyOFZsckJvTnJkd3BPOGZZeTkvU3dJREFRQUJBb0lCQUJuWGNkYkw2d0ZmaXFKRApuM2tBeE0rNU9tTU44WmdqSGwzbWhteHU0WExLSldObE5FRDBVUDhlWkVyM0hydUJkMndjbUtxa1pyNUhOWVJqClpRYmdmWVhtSUhEcUpXcDZXbXNsUGdHQ3pYRkozSG9nVndwa0F6TndpekNDQWlVcnduUHNrcTlxN2RCU3liL3MKOHZvODJHTjlqd29NbkhDUXMzdjdnYXpjMzVvVFdSUXJuWVM2OXpqcnFteVRQSlVrTmJnUy90SWJNT1dGbVE3OQpuUDJQVTNDTENXSisvUWcxdGp1TWlCbTMwbm9FMXlDTTdMYXVlZW8vU1ZkV3J2ZEhYMU53c2JYandRckZmMEhUCnVpd2tVYysvNWJMM2xYa2dkamt3QnhjUjFaVGl2SGZ1ZE9iaG4zNGVpMWYvK3JIYTNnSmZGaUV5anl1RHdQMlgKRTNBUnEwRUNnWUVBMzlGYXorcmg0RWZQS29EKytoRmxra3hzTTB6anU4V3dGd2hwZXM5YkRiTlRxK3M3a2RZawprTHZhL1RPZWVPVHlCZ2tWTkhnWnBnWThVRWRVTEZrRHlsdzJtTGRZM3JjTlZRdm5KL0JOdmoya2Y5ZE5uQzAyCkU0TlVLMXU1T2lsNmV4NHYyb3ZuWFo0aVdITk44QlJ4Qk5LUUJmcmhBZkcwUjdrc1dsQk9mZUVDZ1lFQTJzSGEKTnZNSDZ4V09mRWVOdjFqVFdKa3lvUVpNOXdmTlRFaDlnNlZYRzFkeHZlcEtJaDNvZkFkaFA1Vk4zUE1qemtUQgpNc3crQjBUSG5jMUFFZ1ZBeVFhRU1VSTRpWnpMMTJiQVJKbnRFNHlUL0FTbHJSNkZoaG44VEx3MnV4WmtmSFR4CmJjRHVFaHk5YUdtTTF4aHhZS0xPT2VWbFNkSGRlYWhBNTRCcXFxc0NnWUJyb29XMnFiRjRwM0FFYzhhclFnU0QKeDhiZElPUUFJRURmd3NiZkxhc1BPcWRKYlRYWG01RTRIVzlpQnhuMTc3eElsTU9pMlFNVXFia0ZybGZYZi9Obgp0Tkw0dkd1N3AzSjg3TjE4Z244UXR4cE45Sis1TkxEbHoybUI5SGx1ZEJZWDhWdDRFWUh4cnFPN3Y2L0Nma0lmCjNKY3dtUWJ1Wld1YWRuM1M3UDNpWVFLQmdFMHlNV1pJdHhlZllNdThtR25ZMTZRaFU3dDlOTFhML0FlYVlTaU8KdFVHQnh6S2t0Z3A2RVd1TFV5Y1Q4Z2t4aUFZblB5SkU3dkt6czltYzc2b3NUbU5pT0U0RnQxdmdpQko0UVFzMApZblFPbkw1SGlZdWhCSytCQmdheU9JSW04Y2oxbjZrQ2QwRFBBWXdTQzFCd1lMb2dXYlFXbm5yQlkyMm1FVmxnCmVNUEhBb0dCQUowRGdJZ2IrV0s3Z2lhSmt0cXJXakFza0xlL3g5ZDE5SW9uVnhnbVZ2a0g4dDl2MkdkUDFDRUoKMGpPeDBFOG92Z1o0U2laN1BGa2hrSDUxWEFSd1dybmVlcyt3a3pBR1R1cWIrbW16N0N1dlE4QmljbWV1WG1pZQo3NmVjbTcxajZjUnJtQUhwcjhmQ3Q3RHg1VDJlVEJKaTEwcFc4cm4xNlV3ZDlrMk9RVkZkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTDYxV3JQY3Q2WnVndEVITWZUL0hHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFME1UWXpNRFV3V2hjTk1qWXdNekV6TVRZegpNRFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9RY0x5MXIxSW0vL3Z3b2Q5eTV2OElJNWNzaHNQOHp4N0VWT2JiaDJZTTFtRmphM0kKcnF5VDR4S2c1Ylk5UE5NMHRERGs0bGxvK0x6VWRXcVpqcUFzZ3ZrZTNUc0dGK2ZmMTQ4Wk5FU3hmUloyZjJtRAp0Mnh0S0ZrUzZicW1TZkVEN3JxenNkekVCMWhtTUYwdTI3eGNHeit0aWJhbzdTNU9GaFBYMUtYcUQveHJLRnJyCk9kaHR5Sm14ckFKN1k1WER1cm1ITXphMk05UUdhNHY1ODhsWWNCRi85WFRLVEJaQXN1ZGN4STk4aVNnS0VzM3gKMXBURTZCdEJsODd5ZUxCK0tvQ2VIQWV5SStEaXk5blJHbG9haGxvZDllYWxVdDVTNzRNajJKNE1WVTZPVkNqYgpCNFVPNnNnVHZFdytpU3pxdnhXV3NHZzJ0M0NrN3g5akwzOUxBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvRk52bmpHaHN3RkRJQjFUb3l0MjFkQVg3bGd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFT29iLytka1ZRaE1SR1NNdDdTQTZIR1R6MTZLcFczQXlaTkdiNVg4Z0JyaTlMMjBuTE5rUXQxClRYYW03QXBZSmQ1djVPdUwvNlVBSTdHVkpWRDFTRktMd202TGYwVHdUSmpNZUxqUzVjUnV0UHRPU3NXaDdTS00KcFdRbEI3MExMQWFGM2NyQXZqV3U4dVpuMVVxdlBrRG5yV1YxQUsyMHFzZ0Z6aU1pZDVjSHRFaTZxOUhJRmozcwppNkNTNTlyWU1KVXBjOXBxOEFLYXJxR200cXo2ODBtZGl5aUM5blJiSGpObGpneHdXYlJMS2hhMlUvVjBtdUpXCm8wSkV0c216MUtWSXJQSXNIMlZXNThzaXRudVA3VmxJQ0xvTDNScE5wQnpXZUJFWUdKcnhGL2xrcHdYQ0p6MmUKclZGY3l0MW5NcWlvT2c1cmhwSVVhcTUvWERNM1JvST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdjBIQzh0YTlTSnYvNzhLSGZjdWIvQ0NPWExJYkQvTThleEZUbTI0ZG1ETlpoWTJ0CnlLNnNrK01Tb09XMlBUelROTFF3NU9KWmFQaTgxSFZxbVk2Z0xJTDVIdDA3QmhmbjM5ZVBHVFJFc1gwV2RuOXAKZzdkc2JTaFpFdW02cGtueEErNjZzN0hjeEFkWVpqQmRMdHU4WEJzL3JZbTJxTzB1VGhZVDE5U2w2Zy84YXloYQo2em5ZYmNpWnNhd0NlMk9WdzdxNWh6TTJ0alBVQm11TCtmUEpXSEFSZi9WMHlrd1dRTExuWE1TUGZJa29DaExOCjhkYVV4T2diUVpmTzhuaXdmaXFBbmh3SHNpUGc0c3ZaMFJwYUdvWmFIZlhtcFZMZVV1K0RJOWllREZWT2psUW8KMndlRkR1cklFN3hNUG9rczZyOFZsckJvTnJkd3BPOGZZeTkvU3dJREFRQUJBb0lCQUJuWGNkYkw2d0ZmaXFKRApuM2tBeE0rNU9tTU44WmdqSGwzbWhteHU0WExLSldObE5FRDBVUDhlWkVyM0hydUJkMndjbUtxa1pyNUhOWVJqClpRYmdmWVhtSUhEcUpXcDZXbXNsUGdHQ3pYRkozSG9nVndwa0F6TndpekNDQWlVcnduUHNrcTlxN2RCU3liL3MKOHZvODJHTjlqd29NbkhDUXMzdjdnYXpjMzVvVFdSUXJuWVM2OXpqcnFteVRQSlVrTmJnUy90SWJNT1dGbVE3OQpuUDJQVTNDTENXSisvUWcxdGp1TWlCbTMwbm9FMXlDTTdMYXVlZW8vU1ZkV3J2ZEhYMU53c2JYandRckZmMEhUCnVpd2tVYysvNWJMM2xYa2dkamt3QnhjUjFaVGl2SGZ1ZE9iaG4zNGVpMWYvK3JIYTNnSmZGaUV5anl1RHdQMlgKRTNBUnEwRUNnWUVBMzlGYXorcmg0RWZQS29EKytoRmxra3hzTTB6anU4V3dGd2hwZXM5YkRiTlRxK3M3a2RZawprTHZhL1RPZWVPVHlCZ2tWTkhnWnBnWThVRWRVTEZrRHlsdzJtTGRZM3JjTlZRdm5KL0JOdmoya2Y5ZE5uQzAyCkU0TlVLMXU1T2lsNmV4NHYyb3ZuWFo0aVdITk44QlJ4Qk5LUUJmcmhBZkcwUjdrc1dsQk9mZUVDZ1lFQTJzSGEKTnZNSDZ4V09mRWVOdjFqVFdKa3lvUVpNOXdmTlRFaDlnNlZYRzFkeHZlcEtJaDNvZkFkaFA1Vk4zUE1qemtUQgpNc3crQjBUSG5jMUFFZ1ZBeVFhRU1VSTRpWnpMMTJiQVJKbnRFNHlUL0FTbHJSNkZoaG44VEx3MnV4WmtmSFR4CmJjRHVFaHk5YUdtTTF4aHhZS0xPT2VWbFNkSGRlYWhBNTRCcXFxc0NnWUJyb29XMnFiRjRwM0FFYzhhclFnU0QKeDhiZElPUUFJRURmd3NiZkxhc1BPcWRKYlRYWG01RTRIVzlpQnhuMTc3eElsTU9pMlFNVXFia0ZybGZYZi9Obgp0Tkw0dkd1N3AzSjg3TjE4Z244UXR4cE45Sis1TkxEbHoybUI5SGx1ZEJZWDhWdDRFWUh4cnFPN3Y2L0Nma0lmCjNKY3dtUWJ1Wld1YWRuM1M3UDNpWVFLQmdFMHlNV1pJdHhlZllNdThtR25ZMTZRaFU3dDlOTFhML0FlYVlTaU8KdFVHQnh6S2t0Z3A2RVd1TFV5Y1Q4Z2t4aUFZblB5SkU3dkt6czltYzc2b3NUbU5pT0U0RnQxdmdpQko0UVFzMApZblFPbkw1SGlZdWhCSytCQmdheU9JSW04Y2oxbjZrQ2QwRFBBWXdTQzFCd1lMb2dXYlFXbm5yQlkyMm1FVmxnCmVNUEhBb0dCQUowRGdJZ2IrV0s3Z2lhSmt0cXJXakFza0xlL3g5ZDE5SW9uVnhnbVZ2a0g4dDl2MkdkUDFDRUoKMGpPeDBFOG92Z1o0U2laN1BGa2hrSDUxWEFSd1dybmVlcyt3a3pBR1R1cWIrbW16N0N1dlE4QmljbWV1WG1pZQo3NmVjbTcxajZjUnJtQUhwcjhmQ3Q3RHg1VDJlVEJKaTEwcFc4cm4xNlV3ZDlrMk9RVkZkCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTDYxV3JQY3Q2WnVndEVITWZUL0hHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFME1UWXpNRFV3V2hjTk1qWXdNekV6TVRZegpNRFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9RY0x5MXIxSW0vL3Z3b2Q5eTV2OElJNWNzaHNQOHp4N0VWT2JiaDJZTTFtRmphM0kKcnF5VDR4S2c1Ylk5UE5NMHRERGs0bGxvK0x6VWRXcVpqcUFzZ3ZrZTNUc0dGK2ZmMTQ4Wk5FU3hmUloyZjJtRAp0Mnh0S0ZrUzZicW1TZkVEN3JxenNkekVCMWhtTUYwdTI3eGNHeit0aWJhbzdTNU9GaFBYMUtYcUQveHJLRnJyCk9kaHR5Sm14ckFKN1k1WER1cm1ITXphMk05UUdhNHY1ODhsWWNCRi85WFRLVEJaQXN1ZGN4STk4aVNnS0VzM3gKMXBURTZCdEJsODd5ZUxCK0tvQ2VIQWV5SStEaXk5blJHbG9haGxvZDllYWxVdDVTNzRNajJKNE1WVTZPVkNqYgpCNFVPNnNnVHZFdytpU3pxdnhXV3NHZzJ0M0NrN3g5akwzOUxBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvRk52bmpHaHN3RkRJQjFUb3l0MjFkQVg3bGd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFT29iLytka1ZRaE1SR1NNdDdTQTZIR1R6MTZLcFczQXlaTkdiNVg4Z0JyaTlMMjBuTE5rUXQxClRYYW03QXBZSmQ1djVPdUwvNlVBSTdHVkpWRDFTRktMd202TGYwVHdUSmpNZUxqUzVjUnV0UHRPU3NXaDdTS00KcFdRbEI3MExMQWFGM2NyQXZqV3U4dVpuMVVxdlBrRG5yV1YxQUsyMHFzZ0Z6aU1pZDVjSHRFaTZxOUhJRmozcwppNkNTNTlyWU1KVXBjOXBxOEFLYXJxR200cXo2ODBtZGl5aUM5blJiSGpObGpneHdXYlJMS2hhMlUvVjBtdUpXCm8wSkV0c216MUtWSXJQSXNIMlZXNThzaXRudVA3VmxJQ0xvTDNScE5wQnpXZUJFWUdKcnhGL2xrcHdYQ0p6MmUKclZGY3l0MW5NcWlvT2c1cmhwSVVhcTUvWERNM1JvST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtBbGtBQ0dnT0FUbm00Y0NzemhzWG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeE5ERTJNekExTVZvWERUSTJNRE14TXpFMgpNekExTVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXF2NWZVa2N0cXJrdC9aQi9jcTc1MmJPemJCcCsKWWdvTmFMR0NuYnIvNzRFNlQ4VUdrVFdYOEdtYTRSSFdrZEhRb3NSbi9PVW1zdjMwaHBFWWpPeGpReTV6VjhQUgpka2Z6T21FZXN6cVh4Smd3WjBMUi9BaEkyaytOVmNmYzE4UG1nUTVFeXg4S2ZoUnpMNHV1QWt3MHpSNGQ1SWNmCmZzYzM3NzRUR0ZsbjZZT0JVaUdoY3ByMzFoNGs3TE5rL1I3djZOWnc3ODhON1hzMHB5Rk8rY2Z3aUpRVFBtcEUKMVVZd2FHY1Z6YjFtOTIxK09KN0lETnlXSld5ZlM4alVXVlNXa3VpdGlGTnpHczg4T3EzWDNDejRIOGRIMTZTYQpiVlJCaHVqT0M1cFZ1WTQ2RWZ0Umg0MWxLTFF6NEVCdFlXQ1dMNlR0NEI5bk9TbHBZK3p5MDlYSnR3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDhVMitlTWFHekFVTWdIVk9qSzNiVgowQmZ1V0RBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQkpveGxneTV0Y1lnbjg0eFByb1pQMHo3T1lQSGw0OXRLUEg5Sk9pNllOdFZYQXYKUHM0YnlPZElOMHhwTXEvMHRHOWM0N3oxT1NPUDJFZVg2c2pGQkI4VG5CV1lOUmlNSXNDQWJzUDV0UWsxZmtwdApzdEdFMWpzWFhXdEpsMXNQaTdsaWRkcTFlTEZkZDNhWmNtM1MyamRITVgzU0xiS2VtczRpMURSOVBXdnR1S0N2CjFaQ1ZyZEJjZEsvTTF1dU51WWdTSWEvOHlGYk9aTmtRcCtUZDhxSVk0WVFQNGhTYWpiS1Y3Ri81Z0tpVUhzMjAKRDZYVk9DNlpXMXhGRlVTYWYrNWhNdzZHVUNEV3FPSjlRUlpKS2EyNnVqc1hOTkI3UnB3RUJoYk1EbWdqbTNybwp5MHJiTVpsRHA4RmpZSlRXZVhwNk1Ib044UFo5cXdmOHQyeU1ZNHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcXY1ZlVrY3Rxcmt0L1pCL2NxNzUyYk96YkJwK1lnb05hTEdDbmJyLzc0RTZUOFVHCmtUV1g4R21hNFJIV2tkSFFvc1JuL09VbXN2MzBocEVZak94alF5NXpWOFBSZGtmek9tRWVzenFYeEpnd1owTFIKL0FoSTJrK05WY2ZjMThQbWdRNUV5eDhLZmhSekw0dXVBa3cwelI0ZDVJY2Zmc2MzNzc0VEdGbG42WU9CVWlHaApjcHIzMWg0azdMTmsvUjd2Nk5adzc4OE43WHMwcHlGTytjZndpSlFUUG1wRTFVWXdhR2NWemIxbTkyMStPSjdJCkROeVdKV3lmUzhqVVdWU1drdWl0aUZOekdzODhPcTNYM0N6NEg4ZEgxNlNhYlZSQmh1ak9DNXBWdVk0NkVmdFIKaDQxbEtMUXo0RUJ0WVdDV0w2VHQ0QjluT1NscFkrenkwOVhKdHdJREFRQUJBb0lCQUJ3ZS9Wb3dyb2YzTUdNVgpFb0N2MmhNOWhISnc0UHdLbnkzcWs0cVJLR29oSEkvbDNUQ2dXYjZGLzV5b0xGdUszLzhFd2YxTFNsUUJnK2RsCmtWNEx1ajlnTWtQcXhsWG5lMDdNamhuM3R1SDBEWEhPQVc2cmhoK3hHWk5UN1RQbTJjKzdvd0NzdURNSDlmR0oKelRJL2lpZDVubnpvNC9zYmxFMXZPd0MwSTJ5NW1Qc0pHeW9yRm9ROU5NMDdxM2diSnY0TW9FY1pGZHprVjZRegpRdFA0OHExZXJ5YzdVY0RRdU5lRlRXcEg4MHBBWTVxSmxaSWNxNXhNWkZWZ0s5V1VWZUgvSEpoVTJlcnBXcUJzClVYU3NiSDZ2NmI4dFhWWFEvSi84TnByS3NnSnVSWGdCTE9ibmRVRzNFNGUzekJjVEtmQVI3QVgrMzc5L21SZGYKQU43RWMxRUNnWUVBMlZQVHpRaGFUTFdSaXl0MEw2UVg3MHBicjVhYUduRjJpQ2dwYzlRais4bXN2WnV4ZVpLeQpQbkZ2cVBSUk5Jc0cxZHlpZU12S3lkSHFKSkJBTDY2Z2V1YnZxSUhGM1p4ejBmMlM1dFExSGtGTTJhb3ZKdzlrCjk0SlE0bFlxUE43ZDNMcEcxU085SEdFRTlOdHBSRUtubngwd3krdzhoZ1ZoRWJYb2xSL0xSL1VDZ1lFQXlXdlkKdWltWDZ0aWliWVNlMFU4dDRkcjJIYWZYWkg5V3Myc3ZYUzhsaUREdHlGdzI1T2k4ZVhEYjJiMGdEdGFJYjhLRQoxWUlZMWRuK2MwZW91akV2RDhtdnpUaXU0T05xYi9ISjV2dnoxVHdaYXFMcEJDR3hHSDdaYWp4cDh6Ukdic1VqCnEvQ1BWNTczTDNkWGJTdzdQcm9CRTBhZUFUWVVETlp3M0I0Siszc0NnWUExZFhwZk1CUE9WTWVGZlYzcUxpbzUKRVloMks4eWlmcENTczVabXlLTkZWM21uZG5uMGx0SkRxL0cwbE15NDZRMzRZM3FQemttRzFaMEwrM1BlaHMweApEa2Vib3JpQ1orN1JrOWVqOGtWU3VPdG5pNFpuekZDZzFheUIwSUk1VVBVd1M1NEs1ZXlwNDIrdHI1ODRURkVoClFiUDBKWnRKdUY4RlZVTHVFOUVVVlFLQmdBZGxCREhoY1FoWUo2NXBuZ01GS3lRTmk5ZU8zK042b1U0NDh5WXkKb3VnYkU3KzFVdmFZYk1Md2w4R29wZEtsb2FDb3ZZT3hJUVJJMm9TVTd1YlhBMmxLK0Q5S2czRVNLRWd2MGorKwpwRGNCMjlVRVloV2F2d3V0TElJdjhadlNJWHZUbFBtcy9UWTBTZExlU01GalRGR0ROcUxraHN4NGxjZmEzNDNWCk5IeWRBb0dBR1FsNUxPTDBJSmNNZHRDTUlwUXdseFlqZHZtR3pFSlphRk5ob0tSN2pQQmVucVJHejJCQTBUN0cKaG9TQ1JOUTRXQlhpUXRXL3JLbFZRWHJNdGhFNmhRdGZmUU0xY1Q1TE04dHVyMEVmdXV3RG1lVVRhVkg5dE8wWQpzSlk1eTdUS0tFVXo1Y0ZQbit0cDgzaSt5Sk11WlViUEVqVXYzeWtOKzAzdEFhcWtPdGc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTDYxV3JQY3Q2WnVndEVITWZUL0hHREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TXpFME1UWXpNRFV3V2hjTk1qWXdNekV6TVRZegpNRFV3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy9RY0x5MXIxSW0vL3Z3b2Q5eTV2OElJNWNzaHNQOHp4N0VWT2JiaDJZTTFtRmphM0kKcnF5VDR4S2c1Ylk5UE5NMHRERGs0bGxvK0x6VWRXcVpqcUFzZ3ZrZTNUc0dGK2ZmMTQ4Wk5FU3hmUloyZjJtRAp0Mnh0S0ZrUzZicW1TZkVEN3JxenNkekVCMWhtTUYwdTI3eGNHeit0aWJhbzdTNU9GaFBYMUtYcUQveHJLRnJyCk9kaHR5Sm14ckFKN1k1WER1cm1ITXphMk05UUdhNHY1ODhsWWNCRi85WFRLVEJaQXN1ZGN4STk4aVNnS0VzM3gKMXBURTZCdEJsODd5ZUxCK0tvQ2VIQWV5SStEaXk5blJHbG9haGxvZDllYWxVdDVTNzRNajJKNE1WVTZPVkNqYgpCNFVPNnNnVHZFdytpU3pxdnhXV3NHZzJ0M0NrN3g5akwzOUxBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUvRk52bmpHaHN3RkRJQjFUb3l0MjFkQVg3bGd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFT29iLytka1ZRaE1SR1NNdDdTQTZIR1R6MTZLcFczQXlaTkdiNVg4Z0JyaTlMMjBuTE5rUXQxClRYYW03QXBZSmQ1djVPdUwvNlVBSTdHVkpWRDFTRktMd202TGYwVHdUSmpNZUxqUzVjUnV0UHRPU3NXaDdTS00KcFdRbEI3MExMQWFGM2NyQXZqV3U4dVpuMVVxdlBrRG5yV1YxQUsyMHFzZ0Z6aU1pZDVjSHRFaTZxOUhJRmozcwppNkNTNTlyWU1KVXBjOXBxOEFLYXJxR200cXo2ODBtZGl5aUM5blJiSGpObGpneHdXYlJMS2hhMlUvVjBtdUpXCm8wSkV0c216MUtWSXJQSXNIMlZXNThzaXRudVA3VmxJQ0xvTDNScE5wQnpXZUJFWUdKcnhGL2xrcHdYQ0p6MmUKclZGY3l0MW5NcWlvT2c1cmhwSVVhcTUvWERNM1JvST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUljcFZ5YWI2SkxqVnNqT0xEZmxtaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURNeE5ERTJNekExTVZvWERUSTJNRE14TXpFMgpNekExTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxLU3B5U3lXeFlrZTRSQzlMVHQKd0oxRng5ZVJ3RFh5VW4xL090OGF2MnZyY00zQnRxM1JWZlRTbmZacVcwWjhnWEV4eUlHQVZtdWo2aUwwdURoSQp2Z242THkwdXlBSG02WjVySDlYMm1wYkZNaHhsWlBqRzI3aXcxSjhmMXFRTGlUNzdWUUVaaWFPdU1ORXlodTY2CjFodWRHVEg2UjhBK0NtaTBDSTNKS3Awd0o0TGFRUW9hSm1WZ3lNaiszdE5hYnp2U04wWUhwRTl5NGw5UERpSEgKeEpUOUszam9QTE1YRmdUS05pYXF6K1MyZzVPcEpxL0tEUC9TZFdPcGt3WHJMSHRpVFNMaHIzZ1FNajc5NmdsVgpNSVZqZTFzTUJWM3BQaFJmZS9Na0g5dmlRTGtQWGQxcWlvMThCN04rWXdBelVSbFpqc0dSam9OaGY5emZ2OU5vCmFOTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVS9GTnZuakdoc3dGRApJQjFUb3l0MjFkQVg3bGd3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW1wVFdhR0ZUekxaL2toL2RSaFpHL0NjQUF5cEIKM3JVSjR5RjA2VGpCNHN4NWxhdjJRMlZPWGUvR25sL2t1UzcyK0lVdnZYV2VLSHZ3cDB2SXVIYXRLczVxZ1dZTApIc3p5aDJnblJ0dG5kQWtnQ0lZQU8vUVg5amZyalo4NUtTQi9EUnlsQVYrSW9kSFRYbDBlUXVtbHJKaFBIMFBRClliVWNEY0VsOFhSK0tkc2szNjhOeDYwZnJWSnVjWUljTXR6b3dqYjBvVUI2cGpwRVMwZEJDOC84NTVSYVVKZTQKdnUzTUoxK2VUOE45SVpIak1OdFVpaitSd0ZqN1JVZ0dGei90bWFQY3JZQ1krbHpoTW1TdVlOT0lPVVFUNEN2TwpDOGtobUpoN1lEOUNDMm1tNEpsaGh2TzYyKytVOVg2YWpNajZtZ3JXR2FzankwTS8yYmc4Q2tzYUt3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc3BLbkpMSmJGaVI3aEVMMHRPM0FuVVhIMTVIQU5mSlNmWDg2M3hxL2ErdHd6Y0cyCnJkRlY5TktkOW1wYlJueUJjVEhJZ1lCV2E2UHFJdlM0T0VpK0Nmb3ZMUzdJQWVicG5tc2YxZmFhbHNVeUhHVmsKK01iYnVMRFVueC9XcEF1SlB2dFZBUm1KbzY0dzBUS0c3cnJXRzUwWk1mcEh3RDRLYUxRSWpja3FuVEFuZ3RwQgpDaG9tWldESXlQN2UwMXB2TzlJM1JnZWtUM0xpWDA4T0ljZkVsUDByZU9nOHN4Y1dCTW8ySnFyUDVMYURrNmttCnI4b00vOUoxWTZtVEJlc3NlMkpOSXVHdmVCQXlQdjNxQ1ZVd2hXTjdXd3dGWGVrK0ZGOTc4eVFmMitKQXVROWQKM1dxS2pYd0hzMzVqQUROUkdWbU93WkdPZzJGLzNOKy8wMmhvMHdJREFRQUJBb0lCQVFDcHE4cUFoYThpWk51dgptZWJsR3BwUFZRUkRBVXUrZGxhR3c2THVaWDNJVHRiSnlldUhVRVg1N3owRDY1NTZaTWFoQlFwY2NkS3JSLzJwCjVSZzg4bkVQRGRaUmVnZTBOdkYzQXBZbk9MODl6blNFb3ByRC9qNjdSOWxlc0dQRFR1ckRHdzl6a2c1RHBiamcKckwra2lZWHlpdHhycmtFS21taE5mL0k0dGhGMWM3czlLSDVXWWVlWUlkNDV2a3Y4NzBWaHBHdHdDUXYzSnlqNwpwNzlreUpaZjRXL1ZJZkZ1anhwbllyOGFsWkNPdDErakZxVzFJNDB5NjlNUkRZVXZ0TkhWSysxMzFBUThEOU9NCkJxRUVVallsVHRTTmltVEZERElrbWFOTkdNM3JZYnRYVzFMSmhzTkRBdFZwdUFaeWxackF3OXFPWGVVcDRGMnYKZlFyczRKUmhBb0dCQU53RyswUGQvZFBPTTRhL3I4aTdEd1JyVlcxeEhzSkQ1dm9lL2NMQ05VNEtPUnBaWFg3OAplK3pid0NuSGJjd0JRV1RVWVRURC9yUGpJUVV5SU80S1RJVFBqcmZVZVRPVzQwT2J1T1VTM2p4ejhaOXhKR1RNCmdmZzNtNVlhNUoxRmEwSU12QUFsTzV5VkMyWFJvRFlSSDZTV21ML3o2Z3hiQUl3c2lsRlFzTkQ3QW9HQkFNL0UKbzU0OENVRmJSWWxzY1VyQTN0RDlHQkhNbW0wYmVnUFptaU9xZGVUb1VjdU5ab1VMSHRneG1BbFhQRDd1Ynp0RQpyNTIrRXNvM0xEemJ1MnA1K3JpekZGc0ZDd1Z3Q1hpZjB1SEdteWR4V25lZ0VzQnVlS1pkSFpZdEhpZ05QSjBpCjRURDBPVjVjaDNTaUNGYXRBS2lVT1JQY2RmUnVmZW1aeHU0V1pqQUpBb0dBVHJZOHF5RytUVWhHREoyRWNDWGoKRUd5cGFmWit6M1psS2ZOdVNuOFpmS3FSbFFpRk53bHg5K0VCVkxEZ2FZdkZiaUhBQ0pWWkI5ZG9GNmpBT1FmOApLY0xxeG42L1FTSm9lT1k3ZGMrVEswTTdIQlBvdGhxbklEb2NjYzE3SFh3WkM4N3Nib3pqVDNmT1ZRVng4QVdlCk1VNGlwUURJS05WaFU4UVhVMUd2ZjRNQ2dZQVZuVjF3UHNxdnMvRWVCTndjYk1oQmNiTXBWdUhSN0FQYmxxM0UKZkIxYnZSZVZWNWFNek1WZXRIb2VycWFqM1daUkFpcEsvTlV6bUYzUHp3UkdaWDVCN005M1VLVCs0ZEw2YTVZaQp5dWlsUjlPamtsR2hGMTBSNGFvTVQ1Rk5sV0x5N2dnRGNjVHVIaTR4WWhJQUFtdUpIako1OEh1TS9GbTVEYmgyCldIbzFFUUtCZ0FUL0lBbFgyZE9EeTM3VXdjb1E1Q2ZpMzhHT0IwdlBjalNYV0d6SUJGRXBoN1RvdTkxdEdERjcKUkRrZGZweTRsMyt4bWtTY2RwcWZ0bGNFa3RVT2M3bGhnQmE5K2VyL3FWdkdvdnIvTVFLU3lnQnVOZXFJV0NpRApTYVlNZ0QxWFFPTm1XUmRkWUdQZlUvbkhYYzBocUZkNzRVcTBCZmdGUHNWUjR5VWNmdzkrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.13.0@sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "46.246.46.114"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.0@sha256:bc00f086285d2d287dd662a319d3dbe90e57179515ce8649425916aecaa9ac3c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/charts/cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

