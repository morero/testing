apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ template "oci-registry.fullname" . }}
  labels:
    {{- include "oci-registry.labels" . | nindent 4 }}
    helm.sh/chart: {{ template "oci-registry.chart" . }}
spec:
  replicas: {{ .Values.replicas}}
  selector:
    matchLabels:
      {{- include "oci-registry.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "oci-registry.labels" . | nindent 8 }}
    spec:
      containers:
        - name: oci-registry
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if eq .Values.registry.storage.mode "s3" }}
          args: ["s3"]
          env:
            - name: S3_HOST
              value: {{ .Values.registry.storage.s3.host | quote }}
            - name: S3_REGION
              value: {{ .Values.registry.storage.s3.region | quote }}
            - name: S3_BUCKET
              value: {{ .Values.registry.storage.s3.bucket | quote }}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "oci-registry.s3_secret_name" . }}
                  key: access_key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "oci-registry.s3_secret_name" . }}
                  key: secret_key
          {{- else if eq .Values.registry.storage.mode "filesystem" }}
          args: ["filesystem"]
          env:
            - name: FILESYSTEM_ROOT
              value: /data
          {{- else }}
          {{- fail "registry.storage.mode must be either 's3' or 'filesystem'" -}}
          {{- end }}
            - name: UPSTREAM_CONFIG_FILE
              value: /upstream.yaml
            - name: DEFAULT_UPSTREAM_NAMESPACE
              value: {{ .Values.registry.upstream.default_namespace | quote }}
            - name: RUST_LOG
              value: info,actix-web=debug
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - mountPath: /upstream.yaml
              name: upstream
              subPath: upstream.yaml
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 1
            periodSeconds: 2
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 1
            periodSeconds: 2
            failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: upstream
          secret:
            secretName: {{ template "oci-registry.upstream_secret_name" . }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}

